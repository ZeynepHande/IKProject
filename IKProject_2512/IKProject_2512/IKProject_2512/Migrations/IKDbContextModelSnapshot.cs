// <auto-generated />
using System;
using IKProject_2512.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IKProject_2512.Migrations
{
    [DbContext(typeof(IKDbContext))]
    partial class IKDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IKProject_2512.Areas.Platform.Models.CompanyEmployeeModel", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("JokerValue")
                        .HasColumnType("int");

                    b.Property<string>("MailExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackagePeriod")
                        .HasColumnType("int");

                    b.Property<DateTime>("PackageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("CompanyEmployeeModel");
                });

            modelBuilder.Entity("IKProject_2512.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ŞirketAdresi");

                    b.Property<string>("CommercialName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ŞirketÜnvanı");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ŞirketAdı");

                    b.Property<int?>("CompanyPackageID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ŞirketAktifMi");

                    b.Property<int>("JokerValue")
                        .HasColumnType("int")
                        .HasColumnName("PaketKayıtNo");

                    b.Property<string>("Logo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("defaultCompanyRev0.jfif")
                        .HasColumnName("Logo");

                    b.Property<string>("MailExtension")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MailUzantısı");

                    b.Property<int?>("MainCompanyID")
                        .HasColumnType("int")
                        .HasColumnName("AnaŞirketID");

                    b.Property<int?>("PersonelNumber")
                        .HasColumnType("int")
                        .HasColumnName("ÇalışanSayısı");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ŞirketTelefonu");

                    b.Property<int?>("PlatformManagerID")
                        .HasColumnType("int")
                        .HasColumnName("PlatformYöneticisiID");

                    b.HasKey("CompanyID");

                    b.HasIndex("CompanyName")
                        .IsUnique()
                        .HasDatabaseName("INDX_Company_Name");

                    b.HasIndex("CompanyPackageID")
                        .IsUnique()
                        .HasFilter("[CompanyPackageID] IS NOT NULL");

                    b.HasIndex("MainCompanyID");

                    b.HasIndex("PlatformManagerID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("IKProject_2512.Models.CompanyPackage", b =>
                {
                    b.Property<int>("CompanyPackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ŞirketPaketiID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MembershipMonthlyPeriod")
                        .HasColumnType("int")
                        .HasColumnName("ÜyelikSüresi");

                    b.Property<double?>("MembershipPackagePrice")
                        .IsRequired()
                        .HasColumnType("float")
                        .HasColumnName("ÜyelikToplamÜcreti");

                    b.Property<int>("PackageID")
                        .HasColumnType("int")
                        .HasColumnName("ÜyelikPaketID");

                    b.Property<int>("PackageRemainingMonths")
                        .HasColumnType("int")
                        .HasColumnName("PaketinKalanSüresi");

                    b.Property<DateTime>("PackageStartDate")
                        .HasColumnType("date")
                        .HasColumnName("ÜyelikBaşlangıçTarihi");

                    b.HasKey("CompanyPackageID");

                    b.HasIndex("PackageID");

                    b.ToTable("CompanyPackages");
                });

            modelBuilder.Entity("IKProject_2512.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmanID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("DepartmanKodu");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DepartmanAdı");

                    b.Property<string>("Notes")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Notlar");

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentCode = "IT",
                            DepartmentName = "Bilgi İşlem"
                        },
                        new
                        {
                            ID = 2,
                            DepartmentCode = "Fin",
                            DepartmentName = "Finans"
                        },
                        new
                        {
                            ID = 3,
                            DepartmentCode = "SP",
                            DepartmentName = "Satış Pazarlama"
                        },
                        new
                        {
                            ID = 4,
                            DepartmentCode = "HR",
                            DepartmentName = "İnsan Kaynakları"
                        },
                        new
                        {
                            ID = 5,
                            DepartmentCode = "Opr",
                            DepartmentName = "Operasyon"
                        },
                        new
                        {
                            ID = 6,
                            DepartmentCode = "Exe",
                            DepartmentName = "Yönetim"
                        });
                });

            modelBuilder.Entity("IKProject_2512.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ÇalışanID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("DoğumTarihi");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int")
                        .HasColumnName("ŞirketID");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Soyadı");

                    b.Property<string>("EmployeeMiddleName")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("İkinciAdı");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Adı");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("İşeGirişTarihi");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("İletişimAdresi");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("HesapAktifMi");

                    b.Property<bool>("IsCompanyManager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("HesapYöneticisiMi");

                    b.Property<string>("LatestPassword")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("user123")
                        .HasColumnName("YeniParola");

                    b.Property<string>("MailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MailAdresi");

                    b.Property<string>("MailExtension")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MailUzantısı");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Parola");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("İletişimNumarası");

                    b.Property<string>("PhotoPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("userdefaultfotoRev0.png")
                        .HasColumnName("FotoDosyaYolu");

                    b.Property<int>("Shift")
                        .HasColumnType("int")
                        .HasColumnName("Vardiya");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("date")
                        .HasColumnName("İştenÇıkışTarihi");

                    b.Property<int>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("ZamanDamgası");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ünvanı");

                    b.HasKey("EmployeeID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("IKProject_2512.Models.MainCompany", b =>
                {
                    b.Property<int>("MainCompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnaŞirketID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommercialName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("AnaŞirketTicariÜnvan");

                    b.Property<string>("MainCompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AnaŞirketAdı");

                    b.HasKey("MainCompanyID");

                    b.ToTable("MainCompanies");
                });

            modelBuilder.Entity("IKProject_2512.Models.MembershipPackage", b =>
                {
                    b.Property<int>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaketID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("PaketAktifMi");

                    b.Property<double>("PackageBasePrice")
                        .HasColumnType("float")
                        .HasColumnName("PaketAylıkFiyatı");

                    b.Property<int>("PackageMaxCapacity")
                        .HasColumnType("int")
                        .HasColumnName("MaksKapasite");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PaketAdı");

                    b.Property<string>("PhotoPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("badgeDefaultRev0.png")
                        .HasColumnName("FotoDosyaYolu");

                    b.HasKey("PackageID");

                    b.ToTable("MembershipPackages");

                    b.HasData(
                        new
                        {
                            PackageID = 1,
                            IsActive = true,
                            PackageBasePrice = 1000.0,
                            PackageMaxCapacity = 150,
                            PackageName = "Başlangıç",
                            PhotoPath = "badgeBaslangicRev0.png"
                        },
                        new
                        {
                            PackageID = 2,
                            IsActive = true,
                            PackageBasePrice = 3000.0,
                            PackageMaxCapacity = 300,
                            PackageName = "Silver",
                            PhotoPath = "badgeSilverRev0.jfif"
                        },
                        new
                        {
                            PackageID = 3,
                            IsActive = true,
                            PackageBasePrice = 5000.0,
                            PackageMaxCapacity = 500,
                            PackageName = "Gold",
                            PhotoPath = "badgeGoldRev0.png"
                        },
                        new
                        {
                            PackageID = 4,
                            IsActive = true,
                            PackageBasePrice = 8000.0,
                            PackageMaxCapacity = 2000,
                            PackageName = "Bronz",
                            PhotoPath = "badgeBronzeRev0.jpg"
                        });
                });

            modelBuilder.Entity("IKProject_2512.Models.PM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AdresBilgileri");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("DoğumTarihi");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("İşeGirişTarihi");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("HesapAktifMi");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("HesapAdminMi");

                    b.Property<string>("LatestPassword")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("user123")
                        .HasColumnName("YeniParola");

                    b.Property<string>("MailAddress")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("MailAdresi");

                    b.Property<string>("MailExtension")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("@bilgeadamboost.com")
                        .HasColumnName("MailUzantısı");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("İkinciAdı");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Adı");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Parola");

                    b.Property<string>("PhotoPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("userdefaultfotoRev0.png")
                        .HasColumnName("FotoDosyaYolu");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Soyadı");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("date")
                        .HasColumnName("İştenÇıkışTarihi");

                    b.Property<int>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("ZamanDamgası");

                    b.HasKey("ID");

                    b.HasIndex("MailAddress")
                        .IsUnique()
                        .HasDatabaseName("INDX_PY_Mail")
                        .HasFilter("[MailAdresi] IS NOT NULL");

                    b.ToTable("PlatformManagers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Gayrettepe/Beşiktaş",
                            BirthDate = new DateTime(1988, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HireDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdmin = true,
                            MailAddress = "gizemyldz01@gmail.com",
                            Name = "Gizem",
                            Password = "Gizem123!",
                            Surname = "Akalp"
                        });
                });

            modelBuilder.Entity("IKProject_2512.Models.SignUpModel.SignUpModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LatestPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SignUpModel");
                });

            modelBuilder.Entity("IKProject_2512.Models.Company", b =>
                {
                    b.HasOne("IKProject_2512.Models.CompanyPackage", "CompanyPackage")
                        .WithOne("Company")
                        .HasForeignKey("IKProject_2512.Models.Company", "CompanyPackageID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("IKProject_2512.Models.MainCompany", "MainCompany")
                        .WithMany("Subsidaries")
                        .HasForeignKey("MainCompanyID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("IKProject_2512.Models.PM", "PlatformManager")
                        .WithMany("Companies")
                        .HasForeignKey("PlatformManagerID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CompanyPackage");

                    b.Navigation("MainCompany");

                    b.Navigation("PlatformManager");
                });

            modelBuilder.Entity("IKProject_2512.Models.CompanyPackage", b =>
                {
                    b.HasOne("IKProject_2512.Models.MembershipPackage", "Package")
                        .WithMany("CompanyPackages")
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("IKProject_2512.Models.Employee", b =>
                {
                    b.HasOne("IKProject_2512.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IKProject_2512.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("IKProject_2512.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("IKProject_2512.Models.CompanyPackage", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("IKProject_2512.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("IKProject_2512.Models.MainCompany", b =>
                {
                    b.Navigation("Subsidaries");
                });

            modelBuilder.Entity("IKProject_2512.Models.MembershipPackage", b =>
                {
                    b.Navigation("CompanyPackages");
                });

            modelBuilder.Entity("IKProject_2512.Models.PM", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
